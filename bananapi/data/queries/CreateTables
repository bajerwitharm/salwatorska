
CREATE OR REPLACE FUNCTION create_type_enum_if_not_exists (t_name text, enums text) RETURNS void AS $$
BEGIN
IF NOT EXISTS (
    SELECT 1
    FROM   pg_type
    WHERE  typname = t_name
    ) THEN
    execute 'CREATE TYPE ' || t_name || ' AS ENUM (' || enums || ')';
END IF;
END
$$
LANGUAGE plpgsql VOLATILE;

/* 
 * Create types
 */
SELECT create_type_enum_if_not_exists('device_name',$$'temp1','humidity1','light1','awesomes'$$);


/*
 * Create tables
 */
CREATE TABLE IF NOT EXISTS device_data (
	id serial primary key, 
	timestamp timestamp not null default CURRENT_TIMESTAMP, 
	device device_name,
	value float(1)
);

CREATE OR REPLACE FUNCTION create_index_if_not_exists (t_name text, i_name text) RETURNS void AS $$
DECLARE
  full_index_name varchar;
  schema_name varchar;
BEGIN

full_index_name = t_name || '_' || i_name;
schema_name = 'public';

IF NOT EXISTS (
    SELECT 1
    FROM   pg_class c
    JOIN   pg_namespace n ON n.oid = c.relnamespace
    WHERE  c.relname = full_index_name
    AND    n.nspname = schema_name
    ) THEN

    execute 'CREATE INDEX ' || full_index_name || ' ON ' || schema_name || '.' || t_name || ' (' || i_name || ')';
END IF;
END
$$
LANGUAGE plpgsql VOLATILE;


